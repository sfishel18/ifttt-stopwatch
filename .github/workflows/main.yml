name: Expo Publish
on:
  push:
    branches:
      - master
jobs:
  mobile-app-publish:
    name: "[Mobile App] Install and Publish"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - uses: expo/expo-github-action@v5
        with:
          expo-version: 3.x
          expo-username: ${{ secrets.EXPO_CLI_USERNAME }}
          expo-password: ${{ secrets.EXPO_CLI_PASSWORD }}
      - run: |
          cd mobile-app
          yarn install
          expo publish

  backend-test:
    name: "[Backend] Unit Test"
    runs-on: ubuntu-latest
    container: google/cloud-sdk

    steps:
      - uses: actions/checkout@v1

      - name: Install Libraries and Dependencies
        run: |
          curl -sL https://deb.nodesource.com/setup_10.x | bash -
          apt-get install -y google-cloud-sdk-firestore-emulator nodejs procps
          cd backend
          npm install
      - name: Run tests
        env:
          AUTH_KEY: ${{ secrets.AUTH_KEY }}
        run: |
          cd backend
          ./node_modules/.bin/concurrently -k --success first "npm run start:functions" "npm run start:firestore" "npm run test"

  backend-deploy:
    name: "[Backend] Deploy"
    runs-on: ubuntu-latest
    container: google/cloud-sdk:alpine
    needs: Test

    steps:
      - uses: actions/checkout@v1

      - name: Init Gcloud CLI
        env:
          GCLOUD_SERVICE_KEY: ${{ secrets.GCLOUD_SERVICE_KEY }}
        run: |
          echo ${GCLOUD_SERVICE_KEY} > ./keyfile.json
          gcloud auth activate-service-account --key-file ./keyfile.json
      - name: Deploy Cloud Functions
        env:
          AUTH_KEY: ${{ secrets.AUTH_KEY }}
        run: |
          cd backend
          gcloud functions deploy update --project ifttt-stopwatch --runtime nodejs10 --entry-point update --trigger-http --allow-unauthenticated --set-env-vars AUTH_KEY=$AUTH_KEY
          gcloud functions deploy get --project ifttt-stopwatch --runtime nodejs10 --entry-point get --trigger-http --allow-unauthenticated --set-env-vars AUTH_KEY=$AUTH_KEY
